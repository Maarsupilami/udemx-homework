- name: Configure docker
  hosts: all
  become: true
  vars:
    container_name: flask-app
    container_ports:
      - 15000:5000
    container_image: maarsupilami/simple-webapp:2.0
  vars_files: ./docker-data.yml
  tasks:
    - name: Install apt-transport-https
      ansible.builtin.apt:
        name:
          - apt-transport-https
          - ca-certificates
          - lsb-release
          - gnupg
        state: latest
        update_cache: true

    - name: Add signing key
      ansible.builtin.apt_key:
        url: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"
        state: present

    - name: Add repository into sources list
      ansible.builtin.apt_repository:
        repo: "deb [arch={{ ansible_architecture }}] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
        state: present
        filename: docker

    - name: Install Docker
      ansible.builtin.apt:
        name:
          - docker
          - docker.io
          - docker-compose
          - docker-registry
        state: present

    - name: Log in to Docker registry
      community.general.docker_login:
        username: "{{ docker_registry_username }}"
        password: "{{ docker_registry_password }}"
        registry_url: "{{ docker_registry_url }}"

    - name: Run container from registry
      community.general.docker_container:
        name: flask-app
        ports: "15000:5000"
        image: "maarsupilami/simple-webapp:2.0"
        state: started

    - name: Create systemd unit file for container
      copy:
        content: |
          [Unit]
          Description=Docker container for {{ container_name }}
          After=docker.service

          [Service]
          Restart=always
          ExecStart=/usr/bin/docker run -p {{ container_ports[0] }} --name {{ container_name }} {{ container_image }}
          ExecStop=/usr/bin/docker stop -t 2 {{ container_name }}
          ExecStopPost=/usr/bin/docker rm -f {{ container_name }}
          User=root

          [Install]
          WantedBy=multi-user.target
        dest: /etc/systemd/system/{{ container_name }}.service

    - name: Reload systemd to load new unit file
      systemd:
        daemon_reload: true

    - name: Enable and start container service
      systemd:
        name: "{{ container_name }}.service"
        state: started
        enabled: true
        